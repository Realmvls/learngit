 如何用命令将本地项目上传到git
 
 
 在安装了git for windows之后，个人总是忘记配置git config的命令，以此记录一下：

配置用户名和邮箱的命令

1 git config --global user.name "youname"
2 git config --global user.email "youeamil@email.com"

最后可以通过 git config -l 这个命令查看已配置的用户名和邮箱信息

1、（先进入项目文件夹）通过命令 git init 把这个目录变成git可以管理的仓库

git init

2、把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件

git add .

3、用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明

git commit -m 'first commit'

4、关联到远程库

git remote add origin 你的远程库地址

如：

git remote add origin https://github.com/cade8800/ionic-demo.git

5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）

git pull --rebase origin master

6、把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。
如果不是第一次推送可以不加u参数

git push -u origin master


 git 放弃本地修改 强制更新

git fetch --all
git reset --hard origin/master

git fetch 只是下载远程的库的内容，不做任何的合并 git reset 把HEAD指向刚刚下载的最新的版本

*、状态查询命令

git status


1、先删除远程 Git 仓库

 $ git remote rm origin
Git 提示fatal: remote origin already exists 错误解决办法

https://www.cnblogs.com/eedc/p/6168430.html



push本地代码到github出错

刚创建的github版本库，在push代码时出错：

$ git push -u origin master
To git@github.com:******/Demo.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'git@github.com:******/Demo.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

网上搜索了下，是因为远程repository和我本地的repository冲突导致的，而我在创建版本库后，在github的版本库页面点击了创建README.md文件的按钮创建了说明文档，但是却没有pull到本地。这样就产生了版本冲突的问题。

有如下几种解决方法：

1.使用强制push的方法：

$ git push -u origin master -f 

这样会使远程修改丢失，一般是不可取的，尤其是多人协作开发的时候。

2.push前先将远程repository修改pull下来

$ git pull origin master

$ git push -u origin master

3.若不想merge远程和本地修改，可以先创建新的分支：

$ git branch [name]

然后push

$ git push -u origin [name]



1、查看用户名和地址

git config user.name
git config user.email

  ######################一个非常详细的教程 http://blog.jobbole.com/78960/########################
